name: Run Tests

on: [push, pull_request]  

jobs:
  setup-ruby:
    runs-on: ubuntu-latest
    outputs:
      ruby-path: ${{ steps.ruby-setup.outputs.ruby-prefix }}
      bundle-cache-key: ${{ steps.bundle-cache.outputs.cache-key }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Ruby
        id: ruby-setup
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7  

      - name: Instalar Bundler y dependencias
        run: |
          gem install bundler --no-document
          bundle config set deployment 'true'
          bundle install --jobs 4 --retry 3
      - name: Guardar gems en caché
        id: bundle-cache
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-
  
  rubocop-lint:
    runs-on: ubuntu-latest
    needs: setup-ruby
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
      
      - name: Configurar Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7


      - name: Restaurar caché de gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-
      
      - name: Instalar las gemas que faltan
        run: |
          gem install bundler --no-document --user-install
          export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"
          export GEM_PATH="$GEM_HOME"
          export PATH="$GEM_HOME/bin:$PATH"
          echo "GEM_HOME=$GEM_HOME" >> $GITHUB_ENV
          echo "GEM_PATH=$GEM_PATH" >> $GITHUB_ENV
          echo "$GEM_HOME/bin" >> $GITHUB_PATH
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
      - name: Ejecutar RuboCop y guardar salida
        run: bundle exec rubocop --format simple > rubocop_output.txt || true

      - name: Subir reporte de RuboCop como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: rubocop-report
          path: rubocop_output.txt

  brakeman-security:
    runs-on: ubuntu-latest
    needs: setup-ruby
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
      
      - name: Configurar Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7


      - name: Restaurar caché de gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-
      
      - name: Instalar las gemas que faltan
        run: |
          gem install bundler --no-document --user-install
          export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"
          export GEM_PATH="$GEM_HOME"
          export PATH="$GEM_HOME/bin:$PATH"
          echo "GEM_HOME=$GEM_HOME" >> $GITHUB_ENV
          echo "GEM_PATH=$GEM_PATH" >> $GITHUB_ENV
          echo "$GEM_HOME/bin" >> $GITHUB_PATH
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
      - name: Ejecutar Brakeman y guardar salida
        run: bundle exec brakeman -o brakeman_report.txt || true

      - name: Subir reporte de Brakeman como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: brakeman-report
          path: brakeman_report.txt

  deploy-to-testing:
    runs-on: ubuntu-latest
    needs: setup-ruby
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tienda3_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/tienda3_test"
      REDIS_URL: "redis://localhost:6379/0"

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Ruby
        id: ruby-setup
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7  
      

      - name: Restaurar caché de gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-
      
      - name: Instalar las gemas que faltan
        run: |
          gem install bundler --no-document
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
  
      - name: Configurar base de datos
        run: bundle exec bin/rails db:create db:migrate
      
      - name: Guardar dump de la BD
        run: pg_dump -U postgres -h localhost tienda3_test > db_dump.sql
        env:
          PGPASSWORD: postgres

      - name: Subir dump como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: database-dump
          path: db_dump.sql

  test-unit:
    runs-on: ubuntu-latest
    needs: deploy-to-testing
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tienda3_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/tienda3_test"
      REDIS_URL: "redis://localhost:6379/0"

    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        
      - name: Configurar Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7
      
      - name: 🔧 Configurar PATH y GEM_PATH
        run: |
          echo "GEM_HOME=$(gem env user_gemhome)" >> $GITHUB_ENV
          echo "GEM_PATH=$(gem env user_gemhome)" >> $GITHUB_ENV
          echo "$(gem env user_gemhome)/bin" >> $GITHUB_PATH
      
      - name: Restaurar caché de gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-
      
      - name: Instalar las gemas que faltan
        run: bundle install --jobs 4 --retry 3
      

      - name: Descargar dump de la BD
        uses: actions/download-artifact@v4
        with:
          name: database-dump

      - name: Restaurar BD desde dump
        run: psql -U postgres -h localhost -d tienda3_test < db_dump.sql
        env:
          PGPASSWORD: postgres

      - name: Ejecutar pruebas unitarias
        run: bundle exec rails test | tee tmp/test-results-unit.log      

      - name: Guardar resultados de pruebas unitarias
        uses: actions/upload-artifact@v4
        with:
          name: test-results-unit
          path: tmp/test-results-unit.log

  test-system:
    runs-on: ubuntu-latest
    needs: deploy-to-testing
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tienda3_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/tienda3_test"
      REDIS_URL: "redis://localhost:6379/0"

    steps:
      - name: Checkout código
        uses: actions/checkout@v4
      
      - name: Configurar Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7

      - name: Configurar PATH y GEM_PATH
        run: |
          echo "GEM_HOME=$(gem env user_gemhome)" >> $GITHUB_ENV
          echo "GEM_PATH=$(gem env user_gemhome)" >> $GITHUB_ENV
          echo "$(gem env user_gemhome)/bin" >> $GITHUB_PATH
      
      - name: Restaurar caché de gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-
      
      - name: Instalar las gemas que faltan
        run: bundle install --jobs 4 --retry 3
      
      - name: Descargar dump de la BD
        uses: actions/download-artifact@v4
        with:
          name: database-dump

      - name: Restaurar BD desde dump
        run: psql -U postgres -h localhost -d tienda3_test < db_dump.sql
        env:
          PGPASSWORD: postgres

      - name: Ejecutar pruebas de sistema individualmente
        run: |
          for test_file in $(find test/system -name "*.rb"); do
            bundle exec rails test $test_file | tee -a tmp/test-results-system.log
          done
      - name: Guardar resultados de pruebas de sistema
        uses: actions/upload-artifact@v4
        with:
          name: test-results-system
          path: tmp/test-results-system.log
  
  merge-test-results:
    runs-on: ubuntu-latest
    needs: [test-unit, test-system]  
    steps:
      - name: Descargar resultados de test unitarios
        uses: actions/download-artifact@v4
        with:
          name: test-results-unit
          path: tmp/
        
      - name: Descargar resultados de test de sistema
        uses: actions/download-artifact@v4
        with:
          name: test-results-system
          path: tmp/
        
      - name: Unir archivos de logs
        run: cat tmp/test-results-unit.log tmp/test-results-system.log > tmp/test-results-combined.log
        
      - name: Guardar resultados combinados
        uses: actions/upload-artifact@v4
        with:
          name: test-results-combined
          path: tmp/test-results-combined.log
          retention-days: 7
          